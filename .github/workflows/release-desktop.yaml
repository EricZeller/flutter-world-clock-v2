name: Build & Release Desktop Apps

on:
  release:
    types: [published]
  workflow_dispatch:
    

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f1)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'

      - name: Get dependencies
        run: flutter pub get
      
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Install appdmg for macOS
        if: runner.os == 'macOS'
        run: |
          npm install -g appdmg
          
      - name: Install zip for Windows
        if: runner.os == 'Windows'
        run: |
          choco install zip

      - name: Run tests
        run: flutter test


      - name: Build
        run: |
          if [ ${{ matrix.os }} = ubuntu-latest ]; then
            flutter build linux --release
            tar -cJf build/worldclockv2_v${{ steps.version.outputs.version }}_linux_x64.tar.xz build/linux/x64/release/bundle
          elif [ ${{ matrix.os }} = windows-latest ]; then
            flutter build windows --release
            zip -r build/worldclockv2_v${{ steps.version.outputs.version }}_windows_x64.zip build/windows/x64/runner/Release
          elif [ ${{ matrix.os }} = macos-latest ]; then
            flutter build macos --release
            appdmg installers/macos/config.json build/worldclockv2_v${{ steps.version.outputs.version }}_macos_x64.dmg
          fi

      - name: List files
        run: ls -la build/
      
      # - name: Upload artifacts
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       build/worldclockv2_v${{ steps.version.outputs.version }}_linux_x64.tar.xz
      #       build/worldclockv2_v${{ steps.version.outputs.version }}_windows_x64.zip
      #       build/worldclockv2_v${{ steps.version.outputs.version }}_macos_x64.dmg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
