name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

  create_tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV

    - name: Create new tag
      id: tag
      run: |
        IFS='.' read -r -a parts <<< "${{ env.latest_tag }}"
        major=${parts[0]:1}
        minor=${parts[1]}
        patch=${parts[2]}
        new_patch=$((patch + 1))
        new_tag="v${major}.${minor}.${new_patch}"
        echo "new_tag=$new_tag" >> $GITHUB_ENV
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git tag $new_tag
        git push origin $new_tag

  release:
    runs-on: ubuntu-latest
    needs: create_tag
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download APK artifact
      uses: actions/download-artifact@v2
      with:
        name: app-release.apk

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_tag }}
        release_name: Release ${{ env.new_tag }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
