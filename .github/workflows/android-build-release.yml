name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
            

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

        
  create_tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create or update tag
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git tag -f latest-release
        git push origin -f latest-release

  release:
    runs-on: ubuntu-latest
    needs: create_tag
    steps:
    - name: Check if release already exists
      id: check_release
      run: |
        existing_release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/EricZeller/flutter-world-clock-v2/releases/tags/latest-release)
        if [[ -n $existing_release ]]; then
          echo "::set-output name=release_exists::true"
        else
          echo "::set-output name=release_exists::false"
        fi

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      if: steps.check_release.outputs.release_exists != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest-release
        release_name: Release latest-release
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      if: steps.check_release.outputs.release_exists != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
